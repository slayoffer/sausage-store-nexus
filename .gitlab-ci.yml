variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository

stages:
  - build
  - release
  - notify
  - test

include:
  - template: Security/SAST.gitlab-ci.yml

build-backend-code-job:
  stage: build  
  rules:
    - changes:
      - backend/*
    - exists:
      - backend/pom.xml
    - if: $CI_COMMIT_MESSAGE =~ /skip tests/
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^hotfix/ && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^dev/
      when: never
    - when: always
  script:
    - cd backend
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -Dversion.application=${VERSION}
  cache:
    paths:
      - ${CI_PROJECT_DIR}/.m2/repository # для хранения зависимостей бэкенда

build-frontend-code-job:
  stage: build  
  rules:
    - changes:
      - frontend/*
    - if: $CI_COMMIT_MESSAGE =~ /skip tests/
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^hotfix/ && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^dev/
      when: never
    - when: always
  script:
    - cd frontend
    - npm install
    - npm run build
  cache:
    paths:
      - .npm/ # для хранения зависимостей сборки фронтенда

upload-backend-release:
  stage: release
  rules:
    - changes:
      - backend/*
    - when: always
  needs:
    - build-backend-code-job
  script:
    - cd backend
    - mvn -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -s settings.xml -Dversion.application=${VERSION} -DskipTests deploy 

upload-frontend-release:
  stage: release
  rules:
    - changes:
      - frontend/*
    - when: always
  needs:
    - build-frontend-code-job
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_FRONT_REPO_URL}/${VERSION}/sausage-store-${VERSION}.tar.gz

spotbugs-sast:
  dependencies:
    - build-backend-code-job
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
    MAVEN_CLI_OPTS: "-Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository"
  artifacts:
    reports:
      sast: gl-sast-report.json

sonarqube-backend-sast:
  stage: test
  image: maven:3.8-openjdk-16 # тот самый docker-образ, о котором мы все узнаем в будущем
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_BACK_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_BACK_LOGIN}

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  variables:
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task  
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.qualitygate.wait=true
      -Dsonar.projectName=12_АНТОНЕВСЕЕВ_ФРОНТЕНД
      -Dsonar.projectKey=${SONAR_PROJECT_FRONT_KEY}
      -Dsonar.sources=${SONAR_FRONT_SOURCES}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_FRONT_LOGIN}
  allow_failure: true
  needs:
    - build-frontend-code-job

slack-notification-backend:
  stage: notify
  rules:
    - changes:
      - /backend/*
    - if: $CI_COMMIT_MESSAGE =~ /send notification/
  variables:
    PACHKA_BOT: https://api.pachca.com/webhooks/01GKW5KTY1RFJ8BT2QYE8HWB49
  script:
    - 'curl -X POST -H "Content-type: application/json" 
      -d " { \"message\": \"Вышла новая версия backend сосисочной - ${VERSION}. Скачать backend можно по [ссылке](https://nexus.praktikum-services.ru/repository/sausage-store-anton-evseev-backend/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar)\" } " ${PACHKA_BOT}'
  dependencies:
    - upload-backend-release

slack-notification-frontend:
  stage: notify
  rules:
    - changes:
      - /frontend/*
    - if: $CI_COMMIT_MESSAGE =~ /send notification/
  variables:
    PACHKA_BOT: https://api.pachca.com/webhooks/01GKW5KTY1RFJ8BT2QYE8HWB49
  script:
    - 'curl -X POST -H "Content-type: application/json" 
      -d " { \"message\": \"Вышла новая версия frontend сосисочной - ${VERSION}. Скачать frontend можно по [ссылке](https://nexus.praktikum-services.ru/repository/sausage-store-anton-evseev-frontend/${VERSION}/sausage-store-${VERSION}.tar.gz)\" } " ${PACHKA_BOT}'
  dependencies:
    - upload-frontend-release